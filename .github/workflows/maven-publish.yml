
# Название пайплайна
name: deploy
# переменные окружения
env:
      AZURE_FUNCTIONAPP_NAME: 'calculator'   # set this to your function app name on Azure
      POM_XML_DIRECTORY: '.'                    # set this to the directory which contains pom.xml file
      DISTRIBUTION: 'oracle'                      # set this to the java version to use (e.g. 'zulu', 'temurin', 'microsoft')
      JAVA_VERSION: '22'                         # set this to the java version to use (e.g. '8', '11', '17')
on:
  push:
    branches: [ "master" ] # При пуше в ветку мастер начинаем джобы
jobs:
  test_linux: # Тесты
    runs-on: ubuntu-latest # Образ для запуска
    permissions:
      contents: read
      packages: write
    steps: # Шаги
    - name: Checkout the repository
      uses: actions/checkout@v4 # Копирование ветки
    - name: Setup JDK
      uses: actions/setup-java@v4 # Установка версии JAVA
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.DISTRIBUTION }}
    - name: Build with Maven
      run: mvn test -B package --file pom.xml # Запуск тестов
  test_windows: # Тесты
    runs-on: windows-latest # Обрас для запуска
    permissions:
      contents: read
      packages: write
    steps: # Шаги
    - name: Checkout the repository
      uses: actions/checkout@v4 # Копирование ветки
    - name: Setup JDK
      uses: actions/setup-java@v4 # Установка версии JAVA
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.DISTRIBUTION }}
    - name: Build with Maven
      run: mvn test -B package --file pom.xml # Запуск тестов

  build-and-deploy:
    needs: [test_linux, test_windows] # Старт только при успешных тестах
    runs-on: ubuntu-latest 
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4       # Копирование ветки

    - name: Setup Java Sdk ${{ env.JAVA_VERSION }} 
      uses: actions/setup-java@v4      # Установка версии JAVA
      with:
        distribution: ${{ env.DISTRIBUTION }}
        java-version: ${{ env.JAVA_VERSION }}

    - name: 'Restore Project Dependencies Using Mvn'
      shell: pwsh # For Linux, use bash
      run: |
        pushd './${{ env.POM_XML_DIRECTORY }}'
        mvn clean package
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1   # Деплой на удаленный сервер
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.POM_XML_DIRECTORY }}' # if there are multiple function apps in same project, then this path will be like './${{ env.POM_XML_DIRECTORY }}/target/azure-functions/${{ env.POM_FUNCTIONAPP_NAME }'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        respect-pom-xml: true

